import math
import numpy as np


DOMAIN = (0, 100)
ELEMS = 10

def f(x) -> int:
    return 5 * math.pow(x, 3) - 2 * math.pow(x, 2) + 3 * x - 17

#---------------------------------------------------------------------------------#
def f4(x, y):
    return x + (2 * y)

def f5(x):
    return math.sin(x / 2) + 2 * math.cos(x)

def f6(x, y):
    return x**2 + 3 * x * y - 7 * y + 1

step = (abs(DOMAIN[0]) + abs(DOMAIN[1])) / ELEMS

def generate_data():
    print(f"1 {ELEMS} {DOMAIN[0]} {DOMAIN[1]} {ELEMS}")
    for i in np.arange(DOMAIN[0], DOMAIN[1]+1, step):
        print(f"{i} {f(i)}")

def generate_data4():
    print(f"2 {ELEMS} {DOMAIN[0]} {DOMAIN[1]} {ELEMS}")
    for i in np.arange(DOMAIN[0], DOMAIN[1]+1, step):
        print(f"{i} {i} {f4(i, i)}")

def generate_data5():
    print(f"1 {ELEMS} {DOMAIN[0]} {DOMAIN[1]} {ELEMS}")
    for i in np.arange(DOMAIN[0], DOMAIN[1]+1, step):
        print(f"{i} {i} {f5(i, i)}")

def generate_data6():
    print(f"2 {ELEMS} {DOMAIN[0]} {DOMAIN[1]} {ELEMS}")
    for i in np.arange(DOMAIN[0], DOMAIN[1]+1, step):
        print(f"{i} {i} {f6(i, i)}")

#generate_data6()

txt = "((((((((((-0.5124917858524849 * (X1  - 0.0)) - (((X1  - ((-1.62244469116956774E18 * (((-4.7063525083388233E8 * ((-2.3300085878980794E9 / ((-2.9785829497262745E9 + X1 ) * X1 )) / -1.9168853881046815)) / -2.3300085878980794E9) * ((((3.264279759192381E8 + (X1  * -2.9785829497262745E9)) + -4.970299141690373E9) / (((-4.7063525083388233E8 * ((-2.413944940537811E9 / (((-5.440934393199774E9 - ((-2.9785829497262745E9 / (-2.3300085878980794E9 * ((X1  - -4.7063525083388233E8) / -3.134182174341694E9))) * (-4.7063525083388233E8 + ((X1  / -2.0943706055958097E-9) / -3.134182174341694E9)))) - (((1.2732581982058324 / (-2.413944940537811E9 - X1 )) - (((-2.3300085878980794E9 / (-4.7063525083388233E8 / (((3.8705184998807206E9 * X1 ) + (((-3.134182174341694E9 - (5.3196410235072184E8 / X1 )) / -2.413944940537811E9) + ((X1  + -1.8217199307462995) + -2.3300085878980794E9))) / -2.9785829497262745E9))) * X1 ) / 4.2095696286660194E8)) / (X1  * 2.0035806119788413E9))) * X1 )) / ((X1  + -3.134182174341694E9) / -3.8281209579636636E9))) / 1.9614668748492432E9) * 1.635038898930005E9)) + 2.0589944115537873))) + 2.0589944115537873)) * (-3.500482436574449 / ((((-2.413944940537811E9 / (-3.134182174341694E9 + (X1  * -4.970299142365891E9))) - (X1  * -0.3099430975595866)) * -2.413944940537811E9) * 1.4804448280490168E19))) - 1.5405099119826412E9)) / -5.1245097713816924E18) + ((X1  - 0.5216795978160714) * (2.960712714680929E-10 - ((((1.4794396743145857E9 * X1 ) - (-9.091348073794243E9 * X1 )) * X1 ) / -2.413944940537811E9)))) / 0.5634759113108108) - -4.519092861708916E9) * (X1  - (-4.7063525083388233E8 - ((((-1.4295027724985213E9 - (((((X1  / 1.5405099119826412E9) * (X1  - 4.499663891532009E9)) - (((X1  - ((((1.635038898930005E9 + (X1  * -2.9785829497262745E9)) + -4.970299141690373E9) / -1.1916044411114585E9) + 1.5405099119826412E9)) * 9.435348242184273E-20) - 1.5405099119826412E9)) / -5.1245097713816924E18) + ((X1  - ((((-2.413944940537811E9 / ((1.0 + (((-2.9785829497262745E9 * (-2.413944940537811E9 / X1 )) * -6.132885647835794E9) - (((X1  - (((((-2.413944940537811E9 - (-1.4295027724985213E9 - X1 )) * X1 ) / -1.4295027724985213E9) * (X1  * -2.413944940537811E9)) * X1 )) + ((1.635038898930005E9 * X1 ) - -1.4295027724985213E9)) / (-2.9785829497262745E9 + (-1.4295027724985213E9 * (X1  * -4.970299142365891E9)))))) + -4.7063525083388233E8)) - -4.519092861708916E9) / (-5.957165899452549E9 + X1 )) * ((1.9614668748492432E9 - X1 ) / -3.134182174341694E9))) * (((((((-4.7063525083388233E8 / (((-3.134182174341694E9 + ((1.5405099119826412E9 / X1 ) - (((-2.440433087222462 * (X1  - (-4.7063525083388233E8 / (((-3.0645416714285264E9 - (X1  + -3.134182174341694E9)) - ((-1.4295027724985213E9 - ((X1  + ((-1.4295027724985213E9 - X1 ) - -2.3300085878980794E9)) * X1 )) * 1.5405099119826412E9)) / X1 )))) - (((X1  - ((((3.264279759192381E8 + (X1  * -2.9785829497262745E9)) + (-4.970299142365891E9 + X1 )) / -6.4144533860065933E17) + -3.134182174341694E9)) * (((X1  * 0.20198863355196747) / -4.970299142365891E9) / 1.4022725677839198E19)) - 1.5405099119826412E9)) / -5.1245097713816924E18))) * ((-1.4295027724985213E9 / (X1  * -2.413944940537811E9)) * ((1.9614668748492432E9 / X1 ) / -2.413944940537811E9))) - X1 )) - -2.9785829497262745E9) * 0.7701993075896546) - -2.9785829497262745E9) + 0.6755178862038022) / ((1.9614668748492432E9 / ((((-3.134182174341694E9 + (X1  * -2.9785829497262745E9)) + -4.970299141690373E9) - -1.4295027724985213E9) * 1.5405099119826412E9)) * 1.4908316250153608E9)) - ((((2.9785829485383835E9 * X1 ) - 1.362923332925565E19) * X1 ) / -2.413944940537811E9))))) - (X1  + -3.134182174341694E9)) - -1.4295027724985213E9) / X1 )))) - (((X1  - ((((-2.413944940537811E9 + (X1  * -2.9785829497262745E9)) + -4.970299141690373E9) / (((-4.7063525083388233E8 * ((-2.413944940537811E9 / ((-2.9785829497262745E9 + X1 ) * X1 )) / (X1  / -3.6537897228388214E9))) / 1.9614668748492432E9) * 1.635038898930005E9)) + 1.233906747294189)) * (((X1  + -2.413944940537811E9) / -4.970299142365891E9) / ((1.635038898930005E9 / ((((-4.970299142365891E9 / ((X1  * 1.9614668748492432E9) * (((-1.4295027724985213E9 * (-2.413944940537811E9 + X1 )) + ((-2.9785829497262745E9 * (((-1.5936722623590527E9 / (X1  + (((X1  + 1.0360240529050802) + -3.134182174341694E9) / (-2.3300085878980794E9 + (((((X1  / (-2.413944940537811E9 - (((-2.3300085878980794E9 + (((((-1.4295027724985213E9 - (((((-2.413944940537811E9 + ((-4.827889881075622E9 / ((-2.9785829497262745E9 * ((0.5084810562084793 - X1 ) / -4.7063525083388233E8)) * -4.7063525083388233E8)) / 1.635038898930005E9)) - ((1.1968848786718874E9 / (X1  + ((1.0613621413352055 - (((X1  + X1 ) * -5.440934393199774E9) / (((-1.4295027724985213E9 / (-2.3300085878980794E9 / ((X1  / 1.9614668748492432E9) / -2.413944940537811E9))) / -4.7063525083388233E8) * -1.4295027724985213E9))) - (-4.7063525083388233E8 / X1 )))) / 1.9614668748492432E9)) / ((X1  * (-2.413944940537811E9 / X1 )) * -4.970299142365891E9)) + -2.9785829497262745E9) / -1.4295027724985213E9)) - (-4.7063525083388233E8 * ((1.635038898930005E9 + (X1  * 0.45610072834990045)) / -3.134182174341694E9))) / (1.635038898930005E9 + (-2.413944940537811E9 - ((-2.413944940537811E9 * (1.5405099119826412E9 + X1 )) + -2.413944940537811E9)))) - -1.9335045640256567) - (((((((-2.413944940537811E9 - (-5.957165899452549E9 * X1 )) * X1 ) / -1.4295027724985213E9) + (X1  * -2.413944940537811E9)) * X1 ) / -4.7063525083388233E8) + 1.5405099119826412E9))) - -4.7063525083388233E8) * X1 ))) + (((X1  * X1 ) * -2.413944940537811E9) - X1 )) - (((((-2.413944940537811E9 - (1.991716192639617E9 * X1 )) * -2.413944940537811E9) - -7.384244082903702E9) / (X1  - -4.970299142365891E9)) - X1 )) - 3.596505773779248E9) - -4.7063525083388233E8))))) - X1 ) / -4.970299142365891E9)) - 1.5405099119826412E9)) - -3.134182174341694E9))) - -4.970299142365891E9) * (X1  * 1.9614668748492432E9)) / (-2.9785829497262745E9 + ((-1.4295027724985213E9 - X1 ) - ((X1  / -0.06274506504729437) / 1.5405099119826412E9))))) * -4.408085722224796E9))) - 1.5405099119826412E9)) / -5.1245097713816924E18) + ((X1  - ((((-2.413944940537811E9 / X1 ) - -4.519092861708916E9) / (-5.957165899452549E9 + X1 )) * -0.521679598689387)) * (1.3223607112175044 - ((((((-4.7063525083388233E8 / (((-3.134182174341694E9 + ((1.5405099119826412E9 / X1 ) - 1.635038898930005E9)) * ((-1.4295027724985213E9 / (X1  * -2.413944940537811E9)) * ((1.9614668748492432E9 / X1 ) / -3.134182174341694E9))) - X1 )) - -2.9785829497262745E9) * X1 ) - (-9.091348073794243E9 * X1 )) * X1 ) / -2.413944940537811E9))))"
def dots_to_commas(txt: str):
    txt = txt.replace("X1", "C2")
    print( txt.replace('.', ','))

dots_to_commas(txt)
